<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.jinahya</groupId>
  <artifactId>executable-jar-with-maven-example</artifactId>
  <version>0.9.4</version>
  <packaging>jar</packaging>

  <name>${project.artifactId}</name>
  <description>An example for generating executable jar files with dependencies</description>
  <url>https://github.com/jinahya/${project.artifactId}</url>

  <scm>
    <connection>scm:git:git@github.com:jinahya/${project.artifactId}.git</connection>
    <developerConnection>scm:git:git@github.com:jinahya/${project.artifactId}.git
    </developerConnection>
    <url>https://github.com/jinahya/${project.artifactId}</url>
    <tag>0.9.4</tag>
  </scm>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/jinahya/${project.artifactId}/issues</url>
  </issueManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
<!--    <maven.compiler.source>1.8</maven.compiler.source>-->
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
    <maven.compiler.release>${maven.compiler.target}</maven.compiler.release>
    <maven.compiler.testSource>${maven.compiler.source}</maven.compiler.testSource>
    <maven.compiler.testTarget>${maven.compiler.testSource}</maven.compiler.testTarget>
    <maven.compiler.testRelease>${maven.compiler.testTarget}</maven.compiler.testRelease>
    <mainClass>com.github.jinahya.example.Main</mainClass>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>33.3.1-jre</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>7.0.0</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin><!--groupId>org.dstovall</groupId-->
          <groupId>com.jolira</groupId>
          <artifactId>onejar-maven-plugin</artifactId>
          <version>1.4.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <!--          <version>3.5.2</version>-->
          <version>3.6.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>tidy-maven-plugin</artifactId>
          <!--          <version>1.2.0</version>-->
          <version>1.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.17.1</version>
          <configuration>
            <processDependencyManagementTransitive>false</processDependencyManagementTransitive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>3.3.4</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <!--        <version>3.4.1</version>-->
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>enforce-dependency-convergence</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <skip>true</skip>
              <rules>
                <dependencyConvergence />
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-java</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <display>true</display>
                  <version>[1.8.0,)</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.6.3,)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <tagNameFormat>@{project.version}</tagNameFormat>
          <pushChanges>false</pushChanges>
          <localCheckout>true</localCheckout>
          <goals>install</goals>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>jar-with-dependencies</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
              <archive>
                <manifest>
                  <mainClass>${mainClass}</mainClass>
                </manifest>
              </archive>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>onejar</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin><!--groupId>org.dstovall</groupId-->
            <groupId>com.jolira</groupId>
            <artifactId>onejar-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <configuration>
                  <mainClass>${mainClass}</mainClass>
                  <attachToBuild>true</attachToBuild>
                  <!-- https://code.google.com/p/onejar-maven-plugin/issues/detail?id=8 -->
                  <!--classifier>onejar</classifier-->
                  <filename>${project.build.finalName}-onejar.${project.packaging}</filename>
                </configuration>
                <goals>
                  <goal>one-jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>shade</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <shadedArtifactAttached>true</shadedArtifactAttached>
                  <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <mainClass>${mainClass}</mainClass>
                    </transformer>
                  </transformers>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>spring-boot</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>repackage</goal>
                </goals>
                <configuration>
                  <classifier>spring-boot</classifier>
                  <mainClass>${mainClass}</mainClass>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>manual</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <phase>prepare-package</phase>
                <configuration>
                  <includeScope>runtime</includeScope>
                  <outputDirectory>${project.build.directory}/${project.build.finalName}-manual.lib
                  </outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>manual-jar</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <phase>prepare-package</phase>
                <configuration>
                  <classifier>manual</classifier>
                  <archive>
                    <manifest>
                      <addClasspath>true</addClasspath>
                      <classpathPrefix>${project.build.finalName}-manual.lib/</classpathPrefix>
                      <mainClass>${mainClass}</mainClass>
                    </manifest>
                  </archive>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>antrun-archive</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <target>
                    <property name="final.name" value="${project.build.directory}/${project.build.finalName}" />
                    <property name="archive.includes" value="${project.build.finalName}-manual.${project.packaging} ${project.build.finalName}-manual.lib/*" />
                    <property name="tar.destfile" value="${final.name}-manual.tar" />
                    <zip basedir="${project.build.directory}" destfile="${final.name}-manual.zip" includes="${archive.includes}" />
                    <tar basedir="${project.build.directory}" destfile="${tar.destfile}" includes="${archive.includes}" />
                    <gzip src="${tar.destfile}" destfile="${tar.destfile}.gz" />
                    <bzip2 src="${tar.destfile}" destfile="${tar.destfile}.bz2" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>quarkus</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <!--        <version.io.quarkus.platform>3.9.2</version.io.quarkus.platform>-->
        <!-- https://search.maven.org/search?q=g:io.quarkus.platform -->
        <!-- https://github.com/quarkusio/quarkus/issues/43491 -->
<!--        <version.io.quarkus.platform>3.15.0</version.io.quarkus.platform>-->
        <version.io.quarkus.platform>3.15.1</version.io.quarkus.platform>
      </properties>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>io.quarkus.platform</groupId>
            <artifactId>quarkus-bom</artifactId>
            <version>${version.io.quarkus.platform}</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>io.quarkus.platform</groupId>
            <artifactId>quarkus-maven-plugin</artifactId>
            <version>${version.io.quarkus.platform}</version>
            <extensions>true</extensions>
            <configuration>
              <skipOriginalJarRename>true</skipOriginalJarRename> <!-- keep the original jar without .origin -->
              <properties>
                <quarkus.native.container-build>false</quarkus.native.container-build>
                <quarkus.package.type>uber-jar</quarkus.package.type>
                <quarkus.package.main-class>${mainClass}</quarkus.package.main-class>
                <quarkus.package.output-directory>${project.build.directory}</quarkus.package.output-directory>
                <quarkus.package.runner-suffix>-quarkus</quarkus.package.runner-suffix>
              </properties>
            </configuration>
            <executions>
              <execution>
                <id>uber-jar</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
